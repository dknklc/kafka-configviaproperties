
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.datasource.url=jdbc:mysql://localhost:3306/microservices
spring.datasource.username=root
spring.datasource.password=secret
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
server.port=8080


# Biz Kafkaya event gönderirken Java domaininden ç?k?p ba?ka bir teknoloji domainine gidiyoruz. Bunun için elimizdeki eventi serialize ediyoruz.
# Ayn? ?ekil Kafkadan da okurken kafkadaki bir veriyi kendi taraf?na deserialize ediyorsun.
# Biz eventi Kafkaya gönderiyoruz ya , Kafkaya giderken o event serialize oluyor ya ayn? zamanda bir de header koyuyor içine. Header'?n içinde sizin class?n bir pathi oluyor. com.dekankilic.order.OrderPlaceEvent
# Senin gönderdi?in eventin header?nda ba?ka bir classpath var, kar?? consumer'?n ki bam ba?ka. Bu durumda validation hatas? almamak için header eklemeyi kapatabiliriz.